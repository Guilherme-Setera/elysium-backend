services:
  db:
    image: postgres:16-alpine
    container_name: elysium-postgres
    restart: always
    env_file:
      - .env
    environment:
      # Garantimos que o container receba as chaves que ELE entende
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - elysium-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "127.0.0.1:5432:5432"

  app:
    build: .
    container_name: elysium-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: always
    command: >
      sh -lc "exec gunicorn main:app
      --workers ${WEB_CONCURRENCY:-2}
      --worker-class uvicorn.workers.UvicornWorker
      --bind 0.0.0.0:${PORT:-8080}"

volumes:
  elysium-pgdata:
